function setUpInterceptor(a){return a.interceptors.push("AuthInterceptor")}function Router(a,b,c){b.html5Mode(!0),a.state("home",{url:"/",templateUrl:"/html/home.html"}).state("register",{url:"/register",templateUrl:"/html/register.html",controller:"registerController",controllerAs:"register"}).state("login",{url:"/login",templateUrl:"/html/login.html",controller:"loginController",controllerAs:"login"}).state("usersIndex",{url:"/users",templateUrl:"/html/users/index.html",controller:"usersIndexController",controllerAs:"usersIndex"}),c.otherwise("/")}function AuthInterceptor(a){return{request:function(b){var c=a.getToken();return 0===b.url.indexOf("/api")&&c&&(b.headers.Authorization="Bearer "+c),b},response:function(b){return 0===b.config.url.indexOf("/api")&&b.data.token&&a.setToken(b.data.token),b}}}function TokenService(a,b){function c(b){return a.localStorage.setItem("auth-token",b)}function d(){return a.localStorage.getItem("auth-token")}function e(){return a.localStorage.removeItem("auth-token")}function f(){var a=g.getToken();return a?b.decodeToken(a):null}var g=this;g.setToken=c,g.getToken=d,g.decodeToken=f,g.clearToken=e}function CurrentUserService(a,b){var c=b.decodeToken();return c&&(c=c._doc),{saveUser:function(b){saveUser=b,a.$broadcast("loggedIn")},getUser:function(){return c},clearUser:function(){c=null,a.$broadcast("loggedOut"),b.clearToken()}}}function userFactory(a){return a("/api/users/:id",{},{query:{method:"GET",isArray:!1},register:{url:"/api/register",method:"POST"},login:{url:"/api/login",method:"POST"}})}function usersIndexCtrl(a){var b=this;a.query(function(a){b.users=a.users})}function registerCtrl(a,b){var c=this;c.register=function(){a.register(c.user,function(a){var c=a.user?a.user:null;c&&(CurrentUserService.saveUser(c),b.go("usersIndex"))})}}function loginCtrl(a,b,c,d){var e=this;e.login=function(){b.login(e.user,function(a){var b=a.user?a.user:null;b&&(c.saveUser(b),d.go("usersIndex"))})}}function mainCtrl(a,b,c){var d=this;d.user=b.getUser(),d.logout=function(){b.clearUser()},a.$on("loggedIn",function(){d.user=b.getUser(),c.go("home")}),a.$on("loggedOut",function(){d.user=null})}angular.module("dayWithAlex",["ui.router","ngResource","angular-jwt"]).config(Router).config(setUpInterceptor).factory("User",userFactory).factory("AuthInterceptor",AuthInterceptor).service("TokenService",TokenService).service("CurrentUserService",CurrentUserService).controller("usersIndexController",usersIndexCtrl).controller("registerController",registerCtrl).controller("loginController",loginCtrl).controller("mainController",mainCtrl),setUpInterceptor.$inject=["$httpProvider"],Router.$inject=["$stateProvider","$locationProvider","$urlRouterProvider"],AuthInterceptor.$inject=["TokenService"],TokenService.$inject=["$window","jwtHelper"],CurrentUserService.$inject=["$rootScope","TokenService"],userFactory.$inject=["$resource"],usersIndexCtrl.$inject=["User"],registerCtrl.$inject=["User","$state"],loginCtrl.$inject=["$scope","User","CurrentUserService","$state"],mainCtrl.$inject=["$rootScope","CurrentUserService","$state"];